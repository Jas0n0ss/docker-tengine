name: Docker

on:
  schedule:
    - cron: '37 17 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ toLower(github.repository) }}

jobs:
  build:
    name: Build and push images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push ${{ matrix.arch }} image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${{ matrix.arch }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published ${{ matrix.arch }} Docker image
        if: github.event_name != 'pull_request'
        env:
          TAG1: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${{ matrix.arch }}
          TAG2: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ matrix.arch }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          echo "Signing $TAG1@${DIGEST}"
          cosign sign --yes "${TAG1}@${DIGEST}"
          echo "Signing $TAG2@${DIGEST}"
          cosign sign --yes "${TAG2}@${DIGEST}"

  create-manifest:
    name: Create and push multi-arch manifest
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest for latest
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64

      - name: Create and push manifest for version tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION_TAG=${GITHUB_REF#refs/tags/}
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION_TAG} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION_TAG}-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION_TAG}-arm64
